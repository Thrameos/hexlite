p(1,1). p(1,2). p(1,3).
p(2,4). p(2,5). p(2,6).

d(1). d(2).

% check if multiple aggregates in a rule work, result should be (12) and (18)
res1(Z) :- Z1 = #sum{ Y : p(D1,Y) }, Z2 = #max{ Y : p(D2,Y) }, Z = Z1 + Z2, d(D1), d(D2), D1 != D2.

% check if combination of aggregates and external atoms works
f(12,1). f(12,2).
f(13,2). f(13,3).
res2(Z) :- &testConcat[1,2](X), Z = #sum{ X : d(Y) }.		% result should be (12)
res3(Z) :- &testConcat[1,2](X), Z = #sum{ Y : f(X,Y) }.		% result should be (3)
res4(Z) :- Z = #sum{ X : d(Y), &testConcat[1,Y](X) }.		% result should be (23)
